#!/bin/bash

# Ensure the script is executed with the required argument
if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <path_to_file>"
    exit 1
fi

FILE_PATH="$1"

# Check if the file exists
if [ ! -f "$FILE_PATH" ]; then
    echo "Error: File '$FILE_PATH' does not exist."
    exit 1
fi

# Get the directory of the script
SCRIPT_DIR=$(dirname "$(realpath "$0")")

# Paths to executables (relative to the script directory)
SIGCHECK_PATH="$SCRIPT_DIR/sigcheck.exe"
CAPA_PATH="$SCRIPT_DIR/capa.exe"
STRINGS2_PATH="$SCRIPT_DIR/strings2.exe"
EXIFTOOL_PATH="$SCRIPT_DIR/exiftool.exe"

# Check if each tool exists in the script's directory
if [ ! -f "$SIGCHECK_PATH" ]; then
    echo "Error: sigcheck.exe not found in script directory ($SCRIPT_DIR)."
    exit 1
fi

if [ ! -f "$CAPA_PATH" ]; then
    echo "Error: capa.exe not found in script directory ($SCRIPT_DIR)."
    exit 1
fi

if [ ! -f "$STRINGS2_PATH" ]; then
    echo "Error: strings2.exe not found in script directory ($SCRIPT_DIR)."
    exit 1
fi

if [ ! -f "$EXIFTOOL_PATH" ]; then
    echo "Error: exiftool.exe not found in script directory ($SCRIPT_DIR)."
    exit 1
fi

# Create the logs directory if it doesn't exist
LOGS_DIR="$SCRIPT_DIR/logs"
if [ ! -d "$LOGS_DIR" ]; then
    mkdir "$LOGS_DIR"
fi

# Generate the output log file name
FILE_NAME=$(basename "$FILE_PATH")
OUTPUT_FILE="$LOGS_DIR/logs_analysis(${FILE_NAME}).txt"

# Run sigcheck, filter unwanted lines, and save output to file
{
    echo "==================== Sigcheck Output ===================="
    "$SIGCHECK_PATH" -h "$FILE_PATH" 2>&1 | grep -v -E "^(Sigcheck v|Copyright|Sysinternals)" || echo "Error running sigcheck.exe"
    echo ""
} >> "$OUTPUT_FILE"

# Run capa, filter unwanted lines, and append output to file
{
    echo "==================== Capa Output ===================="
    "$CAPA_PATH" -v "$FILE_PATH" 2>&1 | grep -v -E "DeprecationWarning: This is the last capa version supporting Python 3.8 and 3.9" || echo "Error running capa.exe"
    echo ""
} >> "$OUTPUT_FILE"


# Run exiftool and append output to file
{
    echo "==================== ExifTool Output ===================="
    "$EXIFTOOL_PATH" "$FILE_PATH" 2>&1 || echo "Error running exiftool.exe"
    echo ""
} >> "$OUTPUT_FILE"

# Run strings2 and append output to file (no filtering needed)
{
    echo "==================== Strings2 Output ===================="
    "$STRINGS2_PATH" -l 8 -a "$FILE_PATH" 2>&1 || echo "Error running strings2.exe"
    echo ""
} >> "$OUTPUT_FILE"



# Notify the user
echo "Scanning complete. Results saved to '$OUTPUT_FILE'."
